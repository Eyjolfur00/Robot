#pragma config(Motor,  port2,           RightMotor,    tmotorVex269, openLoop)
#pragma config(Motor,  port3,           LeftMotor,     tmotorVex269, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*----------------------------------------------------------------------------------------------------*\
|*                                         - Moving Forward -                                         *|
|*                                      ROBOTC on VEX 2.0 CORTEX                                      *|
|*                                                                                                    *|
|*  This program instructs your robot to move forward at full power for three seconds.  There is a    *|
|*  two second pause at the beginning of the program.                                                 *|
|*                                                                                                    *|
|*                                        ROBOT CONFIGURATION                                         *|
|*    NOTES:                                                                                          *|
|*    1)  Reversing 'rightMotor' (port 2) in the "Motors and Sensors Setup" is needed with the        *|
|*        "Squarebot" mode, but may not be needed for all robot configurations.                       *|
|*    2)  Power levels that can be assigned to a motor port range from -127 (full reverse) to         *|
|*        127 (full forward).                                                                         *|                 *|
\*-----------------------------------------------------------------------------------------------4246-*/



task main()
{
  while(true) //repeat indefinitely
  {
    // code to drive forward for 1 seconds
    motor[LeftMotor] = 127;   //Set the LeftMotor servo to go forward at power level 127
    motor[RightMotor] = 127;  //Set the RightMotor servo to go forward at power level 127
    wait1Msec(1000);         //Drive forward for 1 sec (0,5m)

    // code to drive backwards for 1 second
    motor[LeftMotor] = -127;    //Set the LeftMotor servo to go backwards at power level -127
    motor[RightMotor] = -127;   //Set the RightMotor servo to go backwards at power level -127
    wait1Msec(1000);         //Drive backwards for 1 sec (0,5m)

    // code to drive forward for 2 seconds
    motor[LeftMotor] = 127;  //Set the LeftMotor servo to go forward at power level 127
    motor[RightMotor] = 127; //Set the RightMotor servo to go forward at power level 127
    wait1Msec(2000);         //Drive forward for 2 sec (1m)

    // code to drive backwards for 2 second
    motor[LeftMotor] = -127;    //Set the LeftMotor servo to go backwards at power level -127
    motor[RightMotor] = -127;   //Set the RightMotor servo to go backwards at power level -127
    wait1Msec(2000);         //Drive backwards for 2 sec (1m)
    
    // code to drive forward for 3 seconds
    motor[LeftMotor] = 127;   //Set the LeftMotor servo to go forward at power level 127
    motor[RightMotor] = 127;  //Set the RightMotor servo to go forward at power level 127
    wait1Msec(3000);         //Drive forward for 3 sec (1,5m)

    // code to drive backwards for 3 second
    motor[LeftMotor] = -127;    //Set the LeftMotor servo to go backwards at power level -127
    motor[RightMotor] = -127;   //Set the RightMotor servo to go backwards at power level -127
    wait1Msec(3000);         //Drive backwards for 3 sec (1,5m)

    // code to drive forward for 4 seconds
    motor[LeftMotor] = 127;  //Set the LeftMotor servo to go forward at power level 127
    motor[RightMotor] = 127; //Set the RightMotor servo to go forward at power level 127
    wait1Msec(4000);         //Drive forward for 4 sec (2m)

    // code to drive backwards for 4 second
    motor[LeftMotor] = -127;    //Set the LeftMotor servo to go backwards at power level -127
    motor[RightMotor] = -127;   //Set the RightMotor servo to go backwards at power level -127
    wait1Msec(4000);         //Drive backwards for 4 sec (2m)
    
    // code to drive forward for 5 seconds
    motor[LeftMotor] = 127;  //Set the LeftMotor servo to go forward at power level 127
    motor[RightMotor] = 127; //Set the RightMotor servo to go forward at power level 127
    wait1Msec(5000);         //Drive forward for 5 sec (2,5m)

  }
}
